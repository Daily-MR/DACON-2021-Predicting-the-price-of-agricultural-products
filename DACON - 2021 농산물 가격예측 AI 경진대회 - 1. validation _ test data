{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"DACON - 2021 농산물 가격예측 AI 경진대회 - 2. validation / test data","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y0bYLTiVYpxO","executionInfo":{"status":"ok","timestamp":1635895224371,"user_tz":-540,"elapsed":37509,"user":{"displayName":"이준행","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13430280275754907962"}},"outputId":"0f9f9744-93c0-4b58-aefb-d686272f12d6"},"source":["from google.colab import drive\n","drive.mount('/gdrive', force_remount = True)"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /gdrive\n"]}]},{"cell_type":"code","metadata":{"id":"gaTdl_JOZCWb","executionInfo":{"status":"ok","timestamp":1635895226300,"user_tz":-540,"elapsed":309,"user":{"displayName":"이준행","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13430280275754907962"}}},"source":["import pandas as pd\n","import urllib.request\n","import json\n","import datetime"],"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"_Ww2R_ETa9qK"},"source":["- 2021년 1월부터 오늘 날짜까지 며칠인지"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qKVwqVmeZAvp","executionInfo":{"status":"ok","timestamp":1635870834162,"user_tz":-540,"elapsed":13,"user":{"displayName":"이준행","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13430280275754907962"}},"outputId":"7bf802f8-a729-4757-ce4f-95f6e2fd1a6d"},"source":["(datetime.datetime.today()-datetime.datetime(2021,1,1)).days"],"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["305"]},"metadata":{},"execution_count":36}]},{"cell_type":"markdown","metadata":{"id":"b25c_8sqbFnT"},"source":["- 2021년 1월 1일부터 8일전까지의 데이터를 csv 파일화  \n","  데이터가 없을 경우에는 날짜를 제외한 값에 0을 넣음"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2mxabCOUY8CS","executionInfo":{"status":"ok","timestamp":1635883454170,"user_tz":-540,"elapsed":9798044,"user":{"displayName":"이준행","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13430280275754907962"}},"outputId":"620e6aaa-f9fc-4a3e-a1e0-7d3b643c8b71"},"source":["for i in range(8,(datetime.datetime.today()-datetime.datetime(2021,1,1)).days+1):\n","  today = datetime.datetime.today()\n","  lastday = (today - datetime.timedelta(i)).strftime('%Y%m%d') \n","  url = 'https://www.nongnet.or.kr/api/whlslDstrQr.do?sdate=' # sdate = 날짜\n","\n","  response = urllib.request.urlopen(url+lastday).read()\n","  response = json.loads(response)\n","\n","  data = pd.DataFrame(response['data'])\n","  try:\n","    print(i)\n","    print(str(data['SALEDATE'][0]))\n","    data.to_csv(\"/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/test/\"+str(data['SALEDATE'][0])+\".csv\")\n","  except:\n","    print(i)\n","    df = pd.DataFrame.from_dict([{'PUM_NM' : 0,\n","                              'LV_NM' : 0,\n","                              'TOT_AMT' : 0,\n","                              'SAN_NM' : 0,\n","                              'SALEDATE' : str(lastday),\n","                              'CMP_NM' : 0,\n","                              'DAN_NM' : 0,\n","                              'WHSAL_NM' : 0,\n","                              'SIZE_NM' : 0,\n","                              'COST' : 0,\n","                              'POJ_NM' : 0,\n","                              'TOT_QTY' : 0,\n","                              'QTY' : 0,\n","                              'KIND_NM' : 0,\n","                              'DANQ' : 0}])\n","    df.to_csv(\"/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/test/\"+str(df['SALEDATE'][0])+\".csv\")\n","    continue"],"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["8\n","20211025\n","9\n","20211024\n","10\n","20211023\n","11\n","20211022\n","12\n","20211021\n","13\n","20211020\n","14\n","20211019\n","15\n","20211018\n","16\n","16\n","17\n","20211016\n","18\n","20211015\n","19\n","20211014\n","20\n","20211013\n","21\n","20211012\n","22\n","20211011\n","23\n","20211010\n","24\n","20211009\n","25\n","20211008\n","26\n","20211007\n","27\n","20211006\n","28\n","20211005\n","29\n","20211004\n","30\n","30\n","31\n","20211002\n","32\n","20211001\n","33\n","20210930\n","34\n","20210929\n","35\n","20210928\n","36\n","20210927\n","37\n","20210926\n","38\n","20210925\n","39\n","20210924\n","40\n","20210923\n","41\n","20210922\n","42\n","42\n","43\n","20210920\n","44\n","20210919\n","45\n","20210918\n","46\n","20210917\n","47\n","20210916\n","48\n","20210915\n","49\n","20210914\n","50\n","20210913\n","51\n","20210912\n","52\n","20210911\n","53\n","20210910\n","54\n","20210909\n","55\n","20210908\n","56\n","20210907\n","57\n","20210906\n","58\n","58\n","59\n","20210904\n","60\n","20210903\n","61\n","20210902\n","62\n","20210901\n","63\n","20210831\n","64\n","20210830\n","65\n","65\n","66\n","20210828\n","67\n","20210827\n","68\n","20210826\n","69\n","20210825\n","70\n","20210824\n","71\n","20210823\n","72\n","72\n","73\n","20210821\n","74\n","20210820\n","75\n","20210819\n","76\n","20210818\n","77\n","20210817\n","78\n","20210816\n","79\n","79\n","80\n","20210814\n","81\n","20210813\n","82\n","20210812\n","83\n","20210811\n","84\n","20210810\n","85\n","20210809\n","86\n","86\n","87\n","20210807\n","88\n","20210806\n","89\n","20210805\n","90\n","20210804\n","91\n","20210803\n","92\n","20210802\n","93\n","20210801\n","94\n","20210731\n","95\n","20210730\n","96\n","20210729\n","97\n","20210728\n","98\n","20210727\n","99\n","20210726\n","100\n","20210725\n","101\n","20210724\n","102\n","20210723\n","103\n","20210722\n","104\n","20210721\n","105\n","20210720\n","106\n","20210719\n","107\n","20210718\n","108\n","20210717\n","109\n","20210716\n","110\n","20210715\n","111\n","20210714\n","112\n","20210713\n","113\n","20210712\n","114\n","20210711\n","115\n","20210710\n","116\n","20210709\n","117\n","20210708\n","118\n","20210707\n","119\n","20210706\n","120\n","20210705\n","121\n","20210704\n","122\n","20210703\n","123\n","20210702\n","124\n","20210701\n","125\n","20210630\n","126\n","20210629\n","127\n","20210628\n","128\n","20210627\n","129\n","20210626\n","130\n","20210625\n","131\n","20210624\n","132\n","20210623\n","133\n","20210622\n","134\n","20210621\n","135\n","20210620\n","136\n","20210619\n","137\n","20210618\n","138\n","20210617\n","139\n","20210616\n","140\n","20210615\n","141\n","20210614\n","142\n","20210613\n","143\n","20210612\n","144\n","20210611\n","145\n","20210610\n","146\n","20210609\n","147\n","20210608\n","148\n","20210607\n","149\n","20210606\n","150\n","20210605\n","151\n","20210604\n","152\n","20210603\n","153\n","20210602\n","154\n","20210601\n","155\n","20210531\n","156\n","20210530\n","157\n","20210529\n","158\n","20210528\n","159\n","20210527\n","160\n","20210526\n","161\n","20210525\n","162\n","20210524\n","163\n","20210523\n","164\n","20210522\n","165\n","20210521\n","166\n","20210520\n","167\n","20210519\n","168\n","20210518\n","169\n","20210517\n","170\n","20210516\n","171\n","20210515\n","172\n","20210514\n","173\n","20210513\n","174\n","20210512\n","175\n","20210511\n","176\n","20210510\n","177\n","20210509\n","178\n","20210508\n","179\n","20210507\n","180\n","20210506\n","181\n","20210505\n","182\n","20210504\n","183\n","20210503\n","184\n","184\n","185\n","20210501\n","186\n","20210430\n","187\n","20210429\n","188\n","20210428\n","189\n","20210427\n","190\n","20210426\n","191\n","191\n","192\n","20210424\n","193\n","20210423\n","194\n","20210422\n","195\n","20210421\n","196\n","20210420\n","197\n","20210419\n","198\n","198\n","199\n","20210417\n","200\n","20210416\n","201\n","20210415\n","202\n","20210414\n","203\n","20210413\n","204\n","20210412\n","205\n","205\n","206\n","20210410\n","207\n","20210409\n","208\n","20210408\n","209\n","20210407\n","210\n","20210406\n","211\n","20210405\n","212\n","212\n","213\n","20210403\n","214\n","20210402\n","215\n","20210401\n","216\n","20210331\n","217\n","20210330\n","218\n","20210329\n","219\n","219\n","220\n","20210327\n","221\n","20210326\n","222\n","20210325\n","223\n","20210324\n","224\n","20210323\n","225\n","20210322\n","226\n","226\n","227\n","20210320\n","228\n","20210319\n","229\n","20210318\n","230\n","20210317\n","231\n","20210316\n","232\n","20210315\n","233\n","233\n","234\n","20210313\n","235\n","20210312\n","236\n","20210311\n","237\n","20210310\n","238\n","20210309\n","239\n","20210308\n","240\n","240\n","241\n","20210306\n","242\n","20210305\n","243\n","20210304\n","244\n","20210303\n","245\n","20210302\n","246\n","20210301\n","247\n","247\n","248\n","20210227\n","249\n","20210226\n","250\n","20210225\n","251\n","20210224\n","252\n","20210223\n","253\n","20210222\n","254\n","254\n","255\n","20210220\n","256\n","20210219\n","257\n","20210218\n","258\n","20210217\n","259\n","20210216\n","260\n","20210215\n","261\n","20210214\n","262\n","262\n","263\n","263\n","264\n","20210211\n","265\n","20210210\n","266\n","20210209\n","267\n","20210208\n","268\n","20210207\n","269\n","20210206\n","270\n","20210205\n","271\n","20210204\n","272\n","20210203\n","273\n","20210202\n","274\n","20210201\n","275\n","20210131\n","276\n","20210130\n","277\n","20210129\n","278\n","20210128\n","279\n","20210127\n","280\n","20210126\n","281\n","20210125\n","282\n","282\n","283\n","20210123\n","284\n","20210122\n","285\n","20210121\n","286\n","20210120\n","287\n","20210119\n","288\n","20210118\n","289\n","289\n","290\n","20210116\n","291\n","20210115\n","292\n","20210114\n","293\n","20210113\n","294\n","20210112\n","295\n","20210111\n","296\n","296\n","297\n","20210109\n","298\n","20210108\n","299\n","20210107\n","300\n","20210106\n","301\n","20210105\n","302\n","20210104\n","303\n","303\n","304\n","20210102\n","305\n","305\n"]}]},{"cell_type":"markdown","metadata":{"id":"PiMp_C54bgLf"},"source":["- validation data   \n","  대회 측에서 제공해준 데이터는 2020년 9월 28일까지  \n","  그 이후의 데이터를 확보하여 csv 파일화  \n","  데이터가 없을 경우에는 날짜를 제외한 값에 0을 넣음\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j0T2bMl5Y82E","executionInfo":{"status":"ok","timestamp":1635870842145,"user_tz":-540,"elapsed":752,"user":{"displayName":"이준행","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13430280275754907962"}},"outputId":"cc2d2492-5c48-424d-9763-011dc954c73b"},"source":["(datetime.datetime.today()-datetime.datetime(2021,1,1)).days"],"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["305"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"BkV8x7J4cZYo","executionInfo":{"status":"ok","timestamp":1635870842642,"user_tz":-540,"elapsed":10,"user":{"displayName":"이준행","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13430280275754907962"}},"outputId":"83913af6-8505-42ca-e9f1-7edf46a59bf6"},"source":["(datetime.datetime.today() - datetime.timedelta(306)).strftime('%Y%m%d')"],"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'20201231'"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wa_c06qGby5F","executionInfo":{"status":"ok","timestamp":1635873590086,"user_tz":-540,"elapsed":2745823,"user":{"displayName":"이준행","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13430280275754907962"}},"outputId":"9592b8a7-94ad-4aa7-8913-2173b1db723f"},"source":["for i in range((datetime.datetime.today()-datetime.datetime(2021,1,1)).days+1,(datetime.datetime.today()-datetime.datetime(2020,9,28)).days):\n","  today = datetime.datetime.today()\n","  lastday = (today - datetime.timedelta(i)).strftime('%Y%m%d') \n","  url = 'https://www.nongnet.or.kr/api/whlslDstrQr.do?sdate=' # sdate = 날짜\n","\n","  response = urllib.request.urlopen(url+lastday).read()\n","  response = json.loads(response)\n","\n","  data = pd.DataFrame(response['data'])\n","  try:\n","    print(i)\n","    print(str(data['SALEDATE'][0]))\n","    data.to_csv(\"/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/\"+str(data['SALEDATE'][0])+\".csv\")\n","  except:\n","    print(i)\n","    df = pd.DataFrame.from_dict([{'PUM_NM' : 0,\n","                              'LV_NM' : 0,\n","                              'TOT_AMT' : 0,\n","                              'SAN_NM' : 0,\n","                              'SALEDATE' : str(lastday),\n","                              'CMP_NM' : 0,\n","                              'DAN_NM' : 0,\n","                              'WHSAL_NM' : 0,\n","                              'SIZE_NM' : 0,\n","                              'COST' : 0,\n","                              'POJ_NM' : 0,\n","                              'TOT_QTY' : 0,\n","                              'QTY' : 0,\n","                              'KIND_NM' : 0,\n","                              'DANQ' : 0}])\n","    df.to_csv(\"/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/\"+str(df['SALEDATE'][0])+\".csv\")\n","    continue"],"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["306\n","20201231\n","307\n","20201230\n","308\n","20201229\n","309\n","20201228\n","310\n","310\n","311\n","20201226\n","312\n","20201225\n","313\n","20201224\n","314\n","20201223\n","315\n","20201222\n","316\n","20201221\n","317\n","317\n","318\n","20201219\n","319\n","20201218\n","320\n","20201217\n","321\n","20201216\n","322\n","20201215\n","323\n","20201214\n","324\n","324\n","325\n","20201212\n","326\n","20201211\n","327\n","20201210\n","328\n","20201209\n","329\n","20201208\n","330\n","20201207\n","331\n","331\n","332\n","20201205\n","333\n","20201204\n","334\n","20201203\n","335\n","20201202\n","336\n","20201201\n","337\n","20201130\n","338\n","338\n","339\n","20201128\n","340\n","20201127\n","341\n","20201126\n","342\n","20201125\n","343\n","20201124\n","344\n","20201123\n","345\n","345\n","346\n","20201121\n","347\n","20201120\n","348\n","20201119\n","349\n","20201118\n","350\n","20201117\n","351\n","20201116\n","352\n","352\n","353\n","20201114\n","354\n","20201113\n","355\n","20201112\n","356\n","20201111\n","357\n","20201110\n","358\n","20201109\n","359\n","359\n","360\n","20201107\n","361\n","20201106\n","362\n","20201105\n","363\n","20201104\n","364\n","20201103\n","365\n","20201102\n","366\n","366\n","367\n","20201031\n","368\n","20201030\n","369\n","20201029\n","370\n","20201028\n","371\n","20201027\n","372\n","20201026\n","373\n","373\n","374\n","20201024\n","375\n","20201023\n","376\n","20201022\n","377\n","20201021\n","378\n","20201020\n","379\n","20201019\n","380\n","380\n","381\n","20201017\n","382\n","20201016\n","383\n","20201015\n","384\n","20201014\n","385\n","20201013\n","386\n","20201012\n","387\n","387\n","388\n","20201010\n","389\n","20201009\n","390\n","20201008\n","391\n","20201007\n","392\n","20201006\n","393\n","20201005\n","394\n","394\n","395\n","20201003\n","396\n","396\n","397\n","397\n","398\n","20200930\n","399\n","20200929\n"]}]},{"cell_type":"markdown","metadata":{"id":"A62oXPl1dsgO"},"source":["- 전처리용 함수  "]},{"cell_type":"code","metadata":{"id":"V6goPhLYdSR8","executionInfo":{"status":"ok","timestamp":1635895233413,"user_tz":-540,"elapsed":323,"user":{"displayName":"이준행","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13430280275754907962"}}},"source":["import pandas as pd\n","import numpy as np\n","from glob import glob\n","import multiprocessing\n","import pickle\n","import csv"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"xKTnX8BfdSXm","executionInfo":{"status":"ok","timestamp":1635895234709,"user_tz":-540,"elapsed":12,"user":{"displayName":"이준행","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13430280275754907962"}}},"source":["# 윈도우즈 사용시 함수를 별도의 .py파일로 저장 후 import하여 사용\n","def preprocessing(tsalet_file):\n","    unique_pum = [\n","        '배추', '무', '양파', '건고추','마늘',\n","        '대파', '얼갈이배추', '양배추', '깻잎',\n","        '시금치', '미나리', '당근',\n","        '파프리카', '새송이', '팽이버섯', '토마토',\n","    ]\n","    \n","    unique_kind = [\n","        '청상추', '백다다기', '애호박', '캠벨얼리', '샤인마스캇'\n","    ]\n","    \n","    train_dict = {\n","        'date':0\n","    }\n","    \n","    for sub in unique_pum:\n","        train_dict[f'{sub}_거래량(kg)'] = 0\n","        train_dict[f'{sub}_가격(원/kg)'] = 0\n","        \n","    for sub in unique_kind:\n","        train_dict[f'{sub}_거래량(kg)'] = 0\n","        train_dict[f'{sub}_가격(원/kg)'] = 0\n","        \n","    tsalet_sample = pd.read_csv(tsalet_file)\n","    days = sorted(tsalet_sample['SALEDATE'].unique())\n","    for day in days:\n","        train_dict.update(date=day)\n","        for sub in unique_pum:\n","            # 날짜별, 품목별, 거래량이 0 이상인 행만 선택\n","            c = tsalet_sample[(tsalet_sample['SALEDATE']==day) & (tsalet_sample['PUM_NM']==sub) & (tsalet_sample['TOT_QTY']>0)]\n","            if c.shape[0] == 0:\n","                train_dict[f'{sub}_거래량(kg)']=0\n","                train_dict[f'{sub}_가격(원/kg)']=0\n","            else:\n","                tot_amt = c['TOT_AMT'].sum().astype(float)\n","                tot_qty = c['TOT_QTY'].sum().astype(float)\n","                mean_price = tot_amt/(tot_qty+1e-20)\n","                train_dict[f'{sub}_거래량(kg)']=tot_qty\n","                train_dict[f'{sub}_가격(원/kg)']=mean_price\n","        \n","        for sub in unique_kind:\n","            # 날짜별, 품종별, 거래량이 0 이상인 행만 선택\n","            c = tsalet_sample[(tsalet_sample['SALEDATE']==day) & (tsalet_sample['KIND_NM']==sub) & (tsalet_sample['TOT_QTY']>0)]\n","            if c.shape[0] == 0:\n","                train_dict[f'{sub}_거래량(kg)']=0\n","                train_dict[f'{sub}_가격(원/kg)']=0\n","            else:\n","                tot_amt = c['TOT_AMT'].sum().astype(float)\n","                tot_qty = c['TOT_QTY'].sum().astype(float)\n","                mean_price = round(tot_amt/(tot_qty+1e-20))\n","                tot_qty = round(tot_qty, 1)\n","                train_dict[f'{sub}_거래량(kg)']=tot_qty\n","                train_dict[f'{sub}_가격(원/kg)']=mean_price\n","                \n","    return(train_dict)"],"execution_count":4,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"iDvsyyiPd1Cc"},"source":["- csv 파일을 전처리하여 validation data로 병합"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bqZrFNIgdYEH","executionInfo":{"status":"ok","timestamp":1635895238584,"user_tz":-540,"elapsed":1908,"user":{"displayName":"이준행","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13430280275754907962"}},"outputId":"645c30b4-ef02-43a6-e156-650a6575ac6c"},"source":["tsalet_files = sorted(glob('/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/*.csv'))\n","tsalet_files"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20200929.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20200930.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201001.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201002.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201003.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201004.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201005.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201006.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201007.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201008.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201009.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201010.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201011.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201012.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201013.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201014.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201015.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201016.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201017.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201018.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201019.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201020.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201021.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201022.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201023.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201024.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201025.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201026.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201027.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201028.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201029.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201030.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201031.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201101.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201102.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201103.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201104.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201105.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201106.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201107.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201108.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201109.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201110.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201111.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201112.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201113.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201114.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201115.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201116.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201117.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201118.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201119.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201120.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201121.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201122.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201123.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201124.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201125.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201126.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201127.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201128.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201129.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201130.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201201.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201202.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201203.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201204.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201205.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201206.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201207.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201208.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201209.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201210.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201211.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201212.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201213.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201214.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201215.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201216.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201217.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201218.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201219.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201220.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201221.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201222.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201223.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201224.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201225.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201226.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201227.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201228.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201229.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201230.csv',\n"," '/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/private_data/validation/20201231.csv']"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"uhMIlP2ydbxv","executionInfo":{"status":"ok","timestamp":1635873592483,"user_tz":-540,"elapsed":1258,"user":{"displayName":"이준행","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13430280275754907962"}}},"source":["with open('/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/val.csv', 'w', newline='') as csvfile:\n","  fieldnames = preprocessing(tsalet_files[0])\n","  writer = csv.DictWriter(csvfile, fieldnames=fieldnames)\n","  writer.writeheader()\n","  writer.writerow(preprocessing(tsalet_files[0]))"],"execution_count":43,"outputs":[]},{"cell_type":"code","metadata":{"id":"wHxKml8sdb6S","executionInfo":{"status":"ok","timestamp":1635873656152,"user_tz":-540,"elapsed":63679,"user":{"displayName":"이준행","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13430280275754907962"}}},"source":["for i in range(1, len(tsalet_files)):\n","  with open('/gdrive/MyDrive/DACON 2021 농산물 가격예측 AI 경진대회/DATA/val.csv', 'a', newline='') as csvfile:\n","    fieldnames = preprocessing(tsalet_files[i])\n","    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)\n","    writer.writerow(preprocessing(tsalet_files[i]))"],"execution_count":44,"outputs":[]}]}